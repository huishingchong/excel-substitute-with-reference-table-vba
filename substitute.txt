Sub DataInput()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim strInput As String
    'strInput = InputBox("Specify column name for substituting", "Specify column name to substitute", "Enter column name HERE")
    
    Dim toSubColumn As Range
    Set toSubColumn = Application.InputBox("Pick Column perform substitution", , , , , , , 8)
    For Each cell In toSubColumn.Cells
        Debug.Print cell.Address, cell.Value
    Next
    
    'GET THE REFERENCE TABLE
    'Dim referenceTable As Range
    'Set referenceTable = Application.InputBox("Pick reference table", , , , , , , 8)
    'For Each cell In referenceTable.Cells
    '    Debug.Print cell.Address, cell.Value
    'Next
    
    'Prompt user to select reference excel file
    Dim fileName As String
    fileName = Application.GetOpenFilename(FileFilter:="Excel Files (*.xlsx), *.xlsx", Title:="Please the Excel file contianing the reference table")
    Set refWorkBook = Application.Workbooks.Open(fileName)
    Dim ref As Worksheet
    Set ref = refWorkBook.Worksheets("Sheet1")

    Dim LO As ListObject
    Set LO = ref.ListObjects("Table1") 'default table name set by Excel
    Set l = LO.Range

    'For Each cell In l.Cells
    '    Debug.Print cell.Address, cell.Value
    'Next
    
    'Create dictionary based on reference table
    Dim dict As Object
    Set dict = CreateDict(ref)
    Dim key As Variant
    For Each key In dict.Keys
        Debug.Print key, dict(key)
    Next key
    
End Sub

Function CreateDict(ws As Worksheet) As Object
    Dim numberOfRows As Long
    Dim dictionary As Object
    Dim arrValues As Variant, key As Variant, val As Variant, i As Long

    numberOfRows = ws.UsedRange.Rows.Count
    Set dictionary = CreateObject("Scripting.Dictionary")

    ' Load values of used range to memory
    arrValues = ws.UsedRange.Value
    ' Assuming the Key is on first column and Value is on next
    For i = 1 To UBound(arrValues)
        key = arrValues(i, 1)
        val = arrValues(i, 2)
        If Len(key) > 0 Then
            If dictionary.Exists(key) Then
                dictionary.Item(key) = dictionary.Item(key) & "/" & val
            Else
                dictionary.Add key, val
            End If
        End If
        Debug.Print key
    Next
    Set CreateDict = dictionary
    
End Function
