Sub SubstituteMain()  
    'Prompt user to select range of cells to perform substitution on
    Dim toSubColumn As Range
    Set toSubColumn = Application.InputBox("Pick range to perform substitution on", , , , , , , 8)
    
    'Dim referenceTable As Range
    'Set referenceTable = Application.InputBox("Pick reference table", , , , , , , 8)
    'For Each cell In referenceTable.Cells
    '    Debug.Print cell.Address, cell.Value
    'Next
    
    'Prompt user to select reference excel file
    Dim fileName As String
    fileName = Application.GetOpenFilename(FileFilter:="Excel Files (*.xlsx), *.xlsx", Title:="Please the Excel file contianing the reference table")
    Set refWorkBook = Application.Workbooks.Open(fileName)
    Dim ref As Worksheet
    Set ref = refWorkBook.Worksheets("Sheet1") 'Assume table is in worksheet named Sheet1
    'Dim LO As ListObject
    'Set LO = ref.ListObjects("Table1") 'default table name set by Excel
    
    'Create dictionary based on reference table for easy lookup
    Dim dict As Object
    Set dict = CreateDict(ref)
    'Dim key As Variant
    'For Each key In dict.Keys
    '    Debug.Print key, dict(key)
    'Next key
    
    'Replace selected data range with dictionary value
    For Each cell In toSubColumn.Cells
        Dim k, v, prev As String
        k = cell.Value
        If dict.Exists(k) Then
            v = dict(k)
            prev = k
            cell.Value = v 'set value of the cell to the value to substitute
            'Debug.Print prev, "was changed to", cell.Value
            MsgBox "Finished substitution."
        End If
    Next
    
End Sub

'Function to help create dictionary out of supplied table of 2 columns (key, value)
Function CreateDict(ws As Worksheet) As Object
    Dim numberOfRows As Long
    Dim dictionary As Object
    Dim arrValues As Variant, key As Variant, val As Variant, i As Long

    numberOfRows = ws.UsedRange.Rows.Count
    Set dictionary = CreateObject("Scripting.Dictionary")

    ' Load values of used range to memory
    arrValues = ws.UsedRange.Value
    ' Assuming the Key is on first column and Value is on next
    For i = 1 To UBound(arrValues)
        key = arrValues(i, 1)
        val = arrValues(i, 2)
        If Len(key) > 0 Then
            If dictionary.Exists(key) Then
                dictionary.Item(key) = val
            Else
                dictionary.Add key, val
            End If
        End If
    Next
    Set CreateDict = dictionary
    
End Function
